import * as React from 'react';
import './index.scss';
export interface ColorfulTableProps {
    key: React.Key;
    name: string;
    age: number;
    address: string;
}
declare class ColorfulTable extends React.Component {
    static defaultProps: {
        itemList: {
            entityName: {
                apiName: string;
                desc: string;
                enabled: boolean;
                iconId: string;
                id: string;
                name: string;
                structure: string;
            };
            entity: ({
                apiName: string;
                columnConfig: {
                    bachCreateItem: boolean;
                    cascadingDeletionType: any;
                    computeType: any;
                    copyWidthParent: boolean;
                    createNoForExists: boolean;
                    defaultValue: string;
                    encrypted: boolean;
                    endUnMasked: any;
                    fileCount: any;
                    helpText: string;
                    imageCount: any;
                    maxLength: any;
                    multiChoiceType: any;
                    optionSetApiName: string;
                    placeHolder: string;
                    preUnMasked: any;
                    quoteColumnApiName: string;
                    quoteObjectApiName: string;
                    relationObjectApiName: string;
                    scale: any;
                    showTime: boolean;
                    singleChoiceType: string;
                    startNo: number;
                    unique: boolean;
                    userMask: boolean;
                };
                columnType: string;
                defaultUse: boolean;
                name: string;
                mainEntityId: string;
                joinColumnApiName: string;
                entityId: string;
                objectApiName: string;
            } | {
                apiName: string;
                columnConfig: {
                    bachCreateItem: boolean;
                    cascadingDeletionType: string;
                    computeType: any;
                    copyWidthParent: boolean;
                    createNoForExists: boolean;
                    defaultValue: string;
                    encrypted: boolean;
                    endUnMasked: any;
                    fileCount: any;
                    helpText: string;
                    imageCount: any;
                    maxLength: any;
                    multiChoiceType: any;
                    optionSetApiName: string;
                    placeHolder: string;
                    preUnMasked: any;
                    quoteColumnApiName: string;
                    quoteObjectApiName: string;
                    relationObjectApiName: string;
                    scale: any;
                    showTime: boolean;
                    singleChoiceType: any;
                    startNo: number;
                    unique: boolean;
                    userMask: boolean;
                };
                columnType: string;
                defaultUse: boolean;
                name: string;
                mainEntityId: string;
                joinColumnApiName: string;
                entityId: string;
                objectApiName: string;
            } | {
                apiName: string;
                columnConfig: {
                    bachCreateItem: boolean;
                    cascadingDeletionType: any;
                    computeType: any;
                    copyWidthParent: boolean;
                    createNoForExists: boolean;
                    defaultValue: string;
                    encrypted: boolean;
                    endUnMasked: any;
                    fileCount: number;
                    helpText: string;
                    imageCount: any;
                    maxLength: any;
                    multiChoiceType: any;
                    optionSetApiName: string;
                    placeHolder: string;
                    preUnMasked: any;
                    quoteColumnApiName: string;
                    quoteObjectApiName: string;
                    relationObjectApiName: string;
                    scale: any;
                    showTime: boolean;
                    singleChoiceType: any;
                    startNo: number;
                    unique: boolean;
                    userMask: boolean;
                };
                columnType: string;
                defaultUse: boolean;
                name: string;
                mainEntityId: string;
                joinColumnApiName: string;
                entityId: string;
                objectApiName: string;
            } | {
                apiName: string;
                columnConfig: {
                    bachCreateItem: boolean;
                    cascadingDeletionType: any;
                    computeType: any;
                    copyWidthParent: boolean;
                    createNoForExists: boolean;
                    defaultValue: string;
                    encrypted: boolean;
                    endUnMasked: any;
                    fileCount: any;
                    helpText: string;
                    imageCount: any;
                    maxLength: number;
                    multiChoiceType: any;
                    optionSetApiName: string;
                    placeHolder: string;
                    preUnMasked: any;
                    quoteColumnApiName: string;
                    quoteObjectApiName: string;
                    relationObjectApiName: string;
                    scale: number;
                    showTime: boolean;
                    singleChoiceType: any;
                    startNo: number;
                    unique: boolean;
                    userMask: boolean;
                };
                columnType: string;
                defaultUse: boolean;
                name: string;
                mainEntityId: string;
                joinColumnApiName: string;
                entityId: string;
                objectApiName: string;
            } | {
                apiName: string;
                columnConfig: {
                    bachCreateItem: boolean;
                    cascadingDeletionType: any;
                    computeType: any;
                    copyWidthParent: boolean;
                    createNoForExists: boolean;
                    defaultValue: string;
                    encrypted: boolean;
                    endUnMasked: any;
                    fileCount: any;
                    helpText: string;
                    imageCount: number;
                    maxLength: any;
                    multiChoiceType: any;
                    optionSetApiName: string;
                    placeHolder: string;
                    preUnMasked: any;
                    quoteColumnApiName: string;
                    quoteObjectApiName: string;
                    relationObjectApiName: string;
                    scale: any;
                    showTime: boolean;
                    singleChoiceType: any;
                    startNo: number;
                    unique: boolean;
                    userMask: boolean;
                };
                columnType: string;
                defaultUse: boolean;
                name: string;
                mainEntityId: string;
                joinColumnApiName: string;
                entityId: string;
                objectApiName: string;
            })[];
            entityList: ({
                apiName: string;
                columnConfig: {
                    bachCreateItem: boolean;
                    cascadingDeletionType: any;
                    computeType: any;
                    copyWidthParent: boolean;
                    createNoForExists: boolean;
                    defaultValue: string;
                    encrypted: boolean;
                    endUnMasked: any;
                    fileCount: any;
                    helpText: string;
                    imageCount: any;
                    maxLength: number;
                    multiChoiceType: any;
                    optionSetApiName: string;
                    placeHolder: string;
                    preUnMasked: any;
                    quoteColumnApiName: string;
                    quoteObjectApiName: string;
                    relationObjectApiName: string;
                    scale: any;
                    showTime: boolean;
                    singleChoiceType: any;
                    startNo: number;
                    unique: boolean;
                    userMask: boolean;
                };
                columnType: string;
                defaultUse: boolean;
                name: string;
                mainEntityId: string;
                joinColumnApiName: string;
                entityId: string;
                objectApiName: string;
                tableName: string;
                format?: undefined;
            } | {
                apiName: string;
                columnConfig: {
                    bachCreateItem: boolean;
                    cascadingDeletionType: any;
                    computeType: any;
                    copyWidthParent: boolean;
                    createNoForExists: boolean;
                    defaultValue: string;
                    encrypted: boolean;
                    endUnMasked: any;
                    fileCount: any;
                    helpText: string;
                    imageCount: any;
                    maxLength: any;
                    multiChoiceType: any;
                    optionSetApiName: string;
                    placeHolder: string;
                    preUnMasked: any;
                    quoteColumnApiName: string;
                    quoteObjectApiName: string;
                    relationObjectApiName: string;
                    scale: any;
                    showTime: boolean;
                    singleChoiceType: string;
                    startNo: number;
                    unique: boolean;
                    userMask: boolean;
                };
                columnType: string;
                defaultUse: boolean;
                name: string;
                mainEntityId: string;
                joinColumnApiName: string;
                entityId: string;
                objectApiName: string;
                tableName?: undefined;
                format?: undefined;
            } | {
                apiName: string;
                columnConfig: {
                    bachCreateItem: boolean;
                    cascadingDeletionType: any;
                    computeType: any;
                    copyWidthParent: boolean;
                    createNoForExists: boolean;
                    defaultValue: string;
                    encrypted: boolean;
                    endUnMasked: any;
                    fileCount: any;
                    helpText: string;
                    imageCount: any;
                    maxLength: number;
                    multiChoiceType: any;
                    optionSetApiName: string;
                    placeHolder: string;
                    preUnMasked: any;
                    quoteColumnApiName: string;
                    quoteObjectApiName: string;
                    relationObjectApiName: string;
                    scale: any;
                    showTime: boolean;
                    singleChoiceType: any;
                    startNo: number;
                    unique: boolean;
                    userMask: boolean;
                };
                columnType: string;
                defaultUse: boolean;
                name: string;
                mainEntityId: string;
                joinColumnApiName: string;
                entityId: string;
                objectApiName: string;
                format: {
                    scale: number;
                    symbol: string;
                    formatTye: string;
                    percentageFormat: {
                        scale: number;
                        symbol: string;
                    };
                };
                tableName?: undefined;
            } | {
                apiName: string;
                columnConfig: {
                    bachCreateItem: boolean;
                    cascadingDeletionType: string;
                    computeType: any;
                    copyWidthParent: boolean;
                    createNoForExists: boolean;
                    defaultValue: string;
                    encrypted: boolean;
                    endUnMasked: any;
                    fileCount: any;
                    helpText: string;
                    imageCount: any;
                    maxLength: any;
                    multiChoiceType: any;
                    optionSetApiName: string;
                    placeHolder: string;
                    preUnMasked: any;
                    quoteColumnApiName: string;
                    quoteObjectApiName: string;
                    relationObjectApiName: string;
                    scale: any;
                    showTime: boolean;
                    singleChoiceType: any;
                    startNo: number;
                    unique: boolean;
                    userMask: boolean;
                };
                columnType: string;
                defaultUse: boolean;
                name: string;
                mainEntityId: string;
                joinColumnApiName: string;
                entityId: string;
                objectApiName: string;
                tableName?: undefined;
                format?: undefined;
            } | {
                apiName: string;
                columnConfig: {
                    bachCreateItem: boolean;
                    cascadingDeletionType: any;
                    computeType: any;
                    copyWidthParent: boolean;
                    createNoForExists: boolean;
                    defaultValue: string;
                    encrypted: boolean;
                    endUnMasked: any;
                    fileCount: number;
                    helpText: string;
                    imageCount: any;
                    maxLength: any;
                    multiChoiceType: any;
                    optionSetApiName: string;
                    placeHolder: string;
                    preUnMasked: any;
                    quoteColumnApiName: string;
                    quoteObjectApiName: string;
                    relationObjectApiName: string;
                    scale: any;
                    showTime: boolean;
                    singleChoiceType: any;
                    startNo: number;
                    unique: boolean;
                    userMask: boolean;
                };
                columnType: string;
                defaultUse: boolean;
                name: string;
                mainEntityId: string;
                joinColumnApiName: string;
                entityId: string;
                objectApiName: string;
                tableName?: undefined;
                format?: undefined;
            } | {
                apiName: string;
                columnConfig: {
                    bachCreateItem: boolean;
                    cascadingDeletionType: any;
                    computeType: any;
                    copyWidthParent: boolean;
                    createNoForExists: boolean;
                    defaultValue: string;
                    encrypted: boolean;
                    endUnMasked: any;
                    fileCount: any;
                    helpText: string;
                    imageCount: any;
                    maxLength: number;
                    multiChoiceType: any;
                    optionSetApiName: string;
                    placeHolder: string;
                    preUnMasked: any;
                    quoteColumnApiName: string;
                    quoteObjectApiName: string;
                    relationObjectApiName: string;
                    scale: number;
                    showTime: boolean;
                    singleChoiceType: any;
                    startNo: number;
                    unique: boolean;
                    userMask: boolean;
                };
                columnType: string;
                defaultUse: boolean;
                name: string;
                mainEntityId: string;
                joinColumnApiName: string;
                entityId: string;
                objectApiName: string;
                tableName?: undefined;
                format?: undefined;
            } | {
                apiName: string;
                columnConfig: {
                    bachCreateItem: boolean;
                    cascadingDeletionType: any;
                    computeType: any;
                    copyWidthParent: boolean;
                    createNoForExists: boolean;
                    defaultValue: string;
                    encrypted: boolean;
                    endUnMasked: any;
                    fileCount: any;
                    helpText: string;
                    imageCount: number;
                    maxLength: any;
                    multiChoiceType: any;
                    optionSetApiName: string;
                    placeHolder: string;
                    preUnMasked: any;
                    quoteColumnApiName: string;
                    quoteObjectApiName: string;
                    relationObjectApiName: string;
                    scale: any;
                    showTime: boolean;
                    singleChoiceType: any;
                    startNo: number;
                    unique: boolean;
                    userMask: boolean;
                };
                columnType: string;
                defaultUse: boolean;
                name: string;
                mainEntityId: string;
                joinColumnApiName: string;
                entityId: string;
                objectApiName: string;
                tableName?: undefined;
                format?: undefined;
            })[];
        };
        actionRowList: ({
            title: string;
            actionList: {
                name: string;
                type: number;
                btnType: number;
                nextActionList: ({
                    type: number;
                    triggeredType: number;
                    triggeredContent: string;
                    name?: undefined;
                } | {
                    name: string;
                    type: number;
                    triggeredType: number;
                    triggeredContent: string;
                })[];
            }[];
        } | {
            title: string;
            actionList: {
                name: string;
                type: number;
                btnType: number;
            }[];
        })[];
        style: {};
        optionFixed: boolean;
        closePage: boolean;
        lineClose: boolean;
        pageSize: number;
        btnList: ({
            title: string;
            actionList: {
                name: string;
                type: number;
                actionDialog: number;
                actionDialogId: string;
                actionDialogParamsList: {
                    name: string;
                    textContent: string;
                }[];
            }[];
            tooltip?: undefined;
        } | {
            title: string;
            actionList: {
                name: string;
                type: number;
                btnType: number;
            }[];
            tooltip?: undefined;
        } | {
            title: string;
            actionList: {
                name: string;
                type: number;
                triggeredType: number;
                triggeredContent: string;
            }[];
            tooltip?: undefined;
        } | {
            title: string;
            actionList: {
                name: string;
                type: number;
            }[];
            tooltip: string;
        })[];
    };
    constructor(props: any);
    componentDidMount(): void;
    componentWillReceiveProps(nextProps: any, preState: any): void;
    confirmProp(): void;
    cancelProp(): void;
    btnClick(value: any, record: any): Promise<void>;
    getMessageFuc(type: any, text: any): void;
    getLineData(type: any, text: any): any;
    getColumn(itemList: any): void;
    getTable(itemList: any, querySort: any, current: any): Promise<void>;
    getTableTree(itemList: any, parentId: any): Promise<void>;
    getMore(expanded: any, record: any): Promise<void>;
    pageChange(value: any): void;
    btnLineClick(value: any): Promise<void>;
    nextActionFuc(): void;
    confirmDataBatch(): Promise<void>;
    enableDataBatch(enabled: any): Promise<void>;
    submitOneLine(): void;
    handleOk(): void;
    handleCancel(): void;
    talbeOnChange(pagination: any, filters: any, sorter: any, extra: any): void;
    onSelectChange(newSelectedRowKeys: React.Key[]): void;
    render(): JSX.Element;
}
export default ColorfulTable;
